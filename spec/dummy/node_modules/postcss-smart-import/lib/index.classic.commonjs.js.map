{"version":3,"file":"index.classic.commonjs.js","sources":["../src/resolve-id.js","../src/load-content.js","../src/parse-statements.js","../src/index.js"],"sourcesContent":["import { default as resolveId } from \"resolve\"\nimport { includes } from \"lodash\"\n\nvar moduleDirectories = [\n  \"web_modules\",\n  \"node_modules\"\n]\n\nfunction resolveModule(id, opts)\n{\n  return new Promise((resolve, reject) =>\n  {\n    resolveId(id, opts, (err, path) =>\n      err ? reject(err) : resolve(path)\n    )\n  })\n}\n\nexport default function(id, base, options)\n{\n  var paths = options.path\n\n  var resolveOpts = {\n    basedir: base,\n    moduleDirectory: moduleDirectories,\n    paths: paths,\n    extensions: [ \".css\", \".sss\", \".less\", \".scss\", \".sass\" ],\n    packageFilter: function processPackage(pkg)\n    {\n      if (pkg.style) {\n        pkg.main = pkg.style\n      }\n      else if (pkg.browser) {\n        pkg.main = pkg.browser\n      }\n      else if (!pkg.main || !(/\\.css$/).test(pkg.main)) {\n        pkg.main = \"index.css\"\n      }\n      return pkg\n    }\n  }\n\n  return resolveModule(\"./\" + id, resolveOpts)\n    .catch(() =>\n       resolveModule(id, resolveOpts)\n    )\n    .catch(() => {\n      if (!includes(paths, base)) {\n        paths.unshift(base)\n      }\n\n      throw new Error([\n        \"Failed to find '\" + id + \"'\",\n        \"in [ \",\n        \"    \" + paths.join(\",\\n        \"),\n        \"]\"\n      ].join(\"\\n    \"))\n    })\n}\n","import readCache from \"read-cache\"\n\nexport default function loadContent(fileName) {\n  return readCache(fileName, \"utf-8\")\n}\n","import valueParser from \"postcss-value-parser\"\n\nvar stringify = valueParser.stringify\n\nexport default function parseStatements(result, styles)\n{\n  var statements = []\n  var nodes = []\n\n  styles.each((node) =>\n  {\n    var stmt\n    if (node.type === \"atrule\" && node.name === \"import\")\n      stmt = parseImport(result, node)\n\n    if (stmt)\n    {\n      if (nodes.length > 0)\n      {\n        statements.push({\n          type: \"nodes\",\n          nodes: nodes\n        })\n\n        nodes = []\n      }\n\n      statements.push(stmt)\n    }\n    else\n    {\n      nodes.push(node)\n    }\n  })\n\n  if (nodes.length > 0)\n  {\n    statements.push({\n      type: \"nodes\",\n      nodes: nodes\n    })\n  }\n\n  return statements\n}\n\nfunction parseImport(result, atRule)\n{\n  var prev = atRule.prev()\n  while (prev && prev.type === \"comment\") {\n    prev = prev.prev()\n  }\n\n  if (prev)\n  {\n    if (prev.type !== \"atrule\" || (prev.name !== \"import\" && prev.name !== \"charset\"))\n    {\n      return result.warn(\n        \"@import must precede all other statements (besides @charset)\",\n        { node: atRule }\n      )\n    }\n  }\n\n  if (atRule.nodes)\n  {\n    return result.warn(\n      \"It looks like you didn't end your @import statement correctly. Child nodes are attached to it.\",\n      { node: atRule }\n    )\n  }\n\n  var params = valueParser(atRule.params).nodes\n  var stmt = {\n    type: \"import\",\n    node: atRule\n  }\n\n  if (\n    params.length === 0 ||\n    (\n      params[0].type !== \"string\" ||\n      !params[0].value\n    ) &&\n    (\n      params[0].type !== \"function\" ||\n      params[0].value !== \"url\" ||\n      params[0].nodes.length === 0 ||\n      !params[0].nodes[0].value\n    )\n  ) {\n    return result.warn(\n      \"Unable to find uri in '\" + atRule.toString() + \"'\",\n      { node: atRule }\n    )\n  }\n\n  if (params[0].type === \"string\")\n    stmt.uri = params[0].value\n  else\n    stmt.uri = params[0].nodes[0].value\n\n  stmt.fullUri = stringify(params[0])\n\n  return stmt\n}\n","import path from \"path\"\nimport assign from \"object-assign\"\nimport postcss from \"postcss\"\nimport { get } from \"lodash\"\n\nimport resolveId from \"./resolve-id\"\nimport loadContent from \"./load-content\"\nimport parseStatements from \"./parse-statements\"\nimport promiseEach from \"promise-each\"\n\nfunction SmartImport(options)\n{\n  options = assign({\n    root: process.cwd(),\n    path: [],\n    skipDuplicates: true,\n    resolve: resolveId,\n    load: loadContent,\n    plugins: []\n  }, options)\n\n  options.root = path.resolve(options.root)\n\n  // convert string to an array of a single element\n  if (typeof options.path === \"string\")\n    options.path = [ options.path ]\n\n  if (!Array.isArray(options.path))\n    options.path = []\n\n  options.path = options.path.map((possibleRelativePath) =>\n    path.resolve(options.root, possibleRelativePath)\n  )\n\n  return function(styles, result)\n  {\n    var state = {\n      importedFiles: {},\n      hashFiles: {}\n    }\n\n    var fileName = get(styles, \"source.input.file\")\n    if (fileName)\n      state.importedFiles[fileName] = {}\n\n    if (options.plugins && !Array.isArray(options.plugins))\n      throw new Error(\"plugins option must be an array\")\n\n    return parseStyles(result, styles, options, state, [])\n      .then((bundle) => {\n        applyRaws(bundle)\n        applyStyles(bundle, styles)\n\n        if (typeof options.onImport === \"function\")\n          options.onImport(Object.keys(state.importedFiles))\n      })\n  }\n}\n\nfunction applyRaws(bundle)\n{\n  bundle.forEach((stmt, index) =>\n  {\n    if (index === 0)\n      return\n\n    if (stmt.parent)\n    {\n      var before = stmt.parent.node.raws.before\n      if (stmt.type === \"nodes\")\n        stmt.nodes[0].raws.before = before\n      else\n        stmt.node.raws.before = before\n    }\n    else if (stmt.type === \"nodes\")\n    {\n      stmt.nodes[0].raws.before = stmt.nodes[0].raws.before || \"\\n\"\n    }\n  })\n}\n\nfunction applyStyles(bundle, styles)\n{\n  styles.nodes = []\n\n  bundle.forEach((stmt) =>\n  {\n    if (stmt.type === \"import\")\n    {\n      stmt.node.parent = undefined\n      styles.append(stmt.node)\n    }\n    else if (stmt.type === \"media\")\n    {\n      stmt.node.parent = undefined\n      styles.append(stmt.node)\n    }\n    else if (stmt.type === \"nodes\")\n    {\n      stmt.nodes.forEach((node) => {\n        node.parent = undefined\n        styles.append(node)\n      })\n    }\n  })\n}\n\nfunction parseStyles(result, styles, options, state, media)\n{\n  var statements = parseStatements(result, styles)\n\n  return Promise.resolve(statements).then(promiseEach((stmt) => {\n    // skip protocol base uri (protocol://url) or protocol-relative\n    if (stmt.type !== \"import\" || (/^(?:[a-z]+:)?\\/\\//i).test(stmt.uri))\n      return null\n    else\n      return resolveImportId(result, stmt, options, state)\n  }))\n    .then(() => {\n      var imports = []\n      var bundle = []\n\n      // squash statements and their children\n      statements.forEach((stmt) =>\n      {\n        if (stmt.type === \"import\")\n        {\n          if (stmt.children)\n          {\n            stmt.children.forEach((child, index) =>\n            {\n              if (child.type === \"import\")\n                imports.push(child)\n              else\n                bundle.push(child)\n\n              // For better output\n              if (index === 0)\n                child.parent = stmt\n            })\n          }\n          else\n          {\n            imports.push(stmt)\n          }\n        }\n        else if (stmt.type === \"media\" || stmt.type === \"nodes\")\n        {\n          bundle.push(stmt)\n        }\n      })\n\n      return imports.concat(bundle)\n    })\n}\n\nfunction resolveImportId(result, stmt, options, state)\n{\n  var atRule = stmt.node\n  var sourceFile = get(atRule, \"source.input.file\")\n  var base = sourceFile ? path.dirname(sourceFile) : options.root\n\n  return Promise.resolve(options.resolve(stmt.uri, base, options))\n    .then((resolved) => {\n      if (!Array.isArray(resolved))\n        resolved = [ resolved ]\n\n      // Add dependency messages:\n      resolved.forEach((fileName) => {\n        result.messages.push({\n          type: \"dependency\",\n          file: fileName,\n          parent: sourceFile\n        })\n      })\n\n      return Promise.all(resolved.map((file) =>\n         loadImportContent(\n           result,\n           stmt,\n           file,\n           options,\n           state\n        )\n      ))\n    })\n    .then((importedContent) => {\n      // Merge loaded statements\n      stmt.children = importedContent.reduce((currentContent, statements) => {\n        if (statements) {\n          currentContent = currentContent.concat(statements)\n        }\n        return currentContent\n      }, [])\n    })\n    .catch((err) => {\n      result.warn(err.message, { node: atRule })\n    })\n}\n\nfunction loadImportContent(result, stmt, filename, options, state)\n{\n  var atRule = stmt.node\n  if (options.skipDuplicates)\n  {\n    // skip files already imported at the same scope\n    if (state.importedFiles[filename])\n      return null\n\n    // save imported files to skip them next time\n    state.importedFiles[filename] = true\n  }\n\n  return Promise.resolve(options.load(filename, options))\n    .then((content) => {\n      if (typeof options.transform !== \"function\") {\n        return content\n      }\n      return Promise.resolve(options.transform(content, filename, options))\n        .then((transformed) =>\n         typeof transformed === \"string\" ? transformed : content\n      )\n    })\n    .then((content) => {\n      if (content.trim() === \"\")\n      {\n        result.warn(filename + \" is empty\", { node: atRule })\n        return null\n      }\n\n      // skip previous imported files not containing @import rules\n      if (state.hashFiles[content])\n        return null\n\n      return postcss(options.plugins).process(content, {\n        from: filename,\n        syntax: result.opts.syntax,\n        parser: result.opts.parser\n      })\n        .then((importedResult) =>\n        {\n          var styles = importedResult.root\n          result.messages = result.messages.concat(importedResult.messages)\n\n          if (options.skipDuplicates)\n          {\n            var hasImport = styles.some((child) =>\n              child.type === \"atrule\" && child.name === \"import\"\n            )\n\n            if (!hasImport)\n              state.hashFiles[content] = true\n          }\n\n          // recursion: import @import from imported file\n          return parseStyles(result, styles, options, state)\n        })\n    })\n}\n\nexport default postcss.plugin(\"postcss-smart-import\", SmartImport)\n"],"names":["moduleDirectories","resolveModule","id","opts","Promise","resolve","reject","err","path","base","options","paths","resolveOpts","pkg","style","main","browser","test","unshift","Error","join","loadContent","fileName","readCache","stringify","valueParser","parseStatements","result","styles","statements","nodes","each","node","stmt","type","name","parseImport","length","push","atRule","prev","warn","params","value","toString","uri","fullUri","SmartImport","assign","process","cwd","resolveId","root","Array","isArray","map","possibleRelativePath","state","importedFiles","plugins","parseStyles","then","bundle","onImport","Object","keys","applyRaws","forEach","index","parent","before","raws","applyStyles","undefined","append","promiseEach","resolveImportId","imports","children","child","concat","sourceFile","dirname","resolved","messages","all","file","loadImportContent","importedContent","reduce","currentContent","message","filename","skipDuplicates","load","content","transform","transformed","trim","hashFiles","postcss","syntax","parser","importedResult","hasImport","some","plugin"],"mappings":"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"}